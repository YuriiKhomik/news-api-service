{"mappings":"AAMA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,cAC7BC,KAAMF,SAASC,cAAc,oBAGzBE,EAAc,ICXL,MACbC,aAAYC,SAAEA,EAAQC,OAAEA,GAAS,IAC/BC,KAAKC,KAAOD,KAAKE,QAAQJ,GAGzBC,GAAUC,KAAKG,MACjB,CAEAD,QAAQJ,GACN,MAAMG,EAAO,CAAC,EAId,OAHAA,EAAKG,OAASX,SAASC,cAAcI,GACrCG,EAAKI,MAAQJ,EAAKG,OAAOV,cAAc,UACvCO,EAAKK,QAAUL,EAAKG,OAAOV,cAAc,YAClCO,CACT,CAEAM,SACEP,KAAKC,KAAKG,OAAOI,UAAW,EAC5BR,KAAKC,KAAKI,MAAMI,YAAc,YAC9BT,KAAKC,KAAKK,QAAQI,UAAUC,IAAI,YAClC,CAEAC,UACEZ,KAAKC,KAAKG,OAAOI,UAAW,EAC5BR,KAAKC,KAAKI,MAAMI,YAAc,aAC9BT,KAAKC,KAAKK,QAAQI,UAAUG,OAAO,YACrC,CAEAC,OACEd,KAAKC,KAAKG,OAAOM,UAAUG,OAAO,YACpC,CAEAV,OACEH,KAAKC,KAAKG,OAAOM,UAAUC,IAAI,YACjC,GDvBkC,CAClCb,SAAU,4BACVC,QAAQ,IAIJgB,EAAiB,IEdR,MAEblB,cACEG,KAAKgB,YAAc,GACnBhB,KAAKiB,KAAO,CACd,CAEAC,gBAEE,MAAMC,EAAe,IAAIC,gBAAgB,CACvCC,EAAGrB,KAAKgB,YACRM,SAAU,EACVL,KAAMjB,KAAKiB,OAcb,OAAOM,MAVK,qCAAqCJ,IAGjC,CACdK,QAAS,CACP,YAAa,sCAMdC,MAAKC,GAAKA,EAAEC,SACZF,MAAKG,IAEJ5B,KAAK6B,gBAEED,EAAEE,WAEf,CAEAD,gBACE7B,KAAKiB,MAAQ,CACf,CAEAc,YACE/B,KAAKiB,KAAO,CACd,CAGIe,YACF,OAAOhC,KAAKgB,WACd,CAEIgB,UAAMC,GACRjC,KAAKgB,YAAciB,CACrB,GFAF,SAASC,EAAqBJ,GAC5BvC,EAAKC,KAAK2C,mBAAmB,YAG/B,SAAsBL,GACpB,OAAOA,EACJM,KAAI,EAACC,IAAEA,EAAGC,WAAEA,EAAUC,MAAEA,EAAKC,OAAEA,EAAMC,YAAEA,KAC/B,2CACMJ,8BACKC,gCACNC,qCACUC,yBACXC,sCAIZC,KAAK,GACV,CAhB4CC,CAAab,GACzD,CArCAvC,EAAKI,KAAKiD,iBAAiB,UAG3B,SAAkBC,GAKhB,GAJAA,EAAEC,iBAEF/B,EAAeiB,MAAQa,EAAEE,OAAOf,MAAMgB,MAET,KAAzBH,EAAEE,OAAOf,MAAMgB,MACjB,OAAOC,MAAM,aAIfrD,EAAYkB,OACZC,EAAegB,YAyCfxC,EAAKC,KAAK0D,UAAY,GAvCtBtD,EAAYgB,UAGZG,EAAeG,gBAAgBO,MAAKK,IAClCI,EAAqBJ,GACrBvC,EAAKC,KAAKkB,UAAUC,IAAI,oBACxBf,EAAYW,QAAM,GAEtB,IAvBAX,EAAYK,KAAKG,OAAOwC,iBAAiB,SAyBzC,WACEhD,EAAYgB,UACZG,EAAeG,gBAAgBO,MAAKK,IAElCI,EAAqBJ,GACrBlC,EAAYW,QAAM,GAEtB","sources":["src/js/index.js","src/js/load-more-btn.js","src/js/news-service.js"],"sourcesContent":["// імпортуємо клас для фетчу даних\nimport NewsApiservice from './news-service';\n// імпортуємо клас із кнопкою\n// import loadMoreBtn from './load-more-btn';\nimport LoadMoreBtn from './load-more-btn';\n\nconst refs = {\n  list: document.querySelector('.news-list'),\n  form: document.querySelector('.js-search-form'),\n};\n\nconst loadMoreBtn = new LoadMoreBtn({\n  selector: '[data-action=\"load-more\"]',\n  hidden: true,\n});\n\n// робимо екземпляр цього класу (тепер ми можемо передавати в нього всю необхідну інфу без потреби в створенні глобальних змінних)\nconst newsApiService = new NewsApiservice();\n\nrefs.form.addEventListener('submit', onSearch);\nloadMoreBtn.refs.button.addEventListener('click', onLoadMore);\n\nfunction onSearch(e) {\n  e.preventDefault();\n  // передаємо значення this.search.query з інпуту щоби newsApiService знав, що шукати\n  newsApiService.query = e.target.query.value;\n\n  if (e.target.query.value === '') {\n    return alert('Type smth');\n  }\n\n  // вмикаємо кнопку\n  loadMoreBtn.show();\n  newsApiService.resetPage();\n  clearAtriclesContainer();\n  loadMoreBtn.disable();\n  // fetchArticles() повертає проміс із статтями (можна подивитися у класі (return fetch...))\n  //  відповідно, на цей проміс ми можемо вчепити then і обробити його як нам потрібно\n  newsApiService.fetchArticles().then(articles => {\n    appendArticlesMarkup(articles);\n    refs.list.classList.add('news-list-active');\n    loadMoreBtn.enable();\n  });\n}\n\nfunction onLoadMore() {\n  loadMoreBtn.disable();\n  newsApiService.fetchArticles().then(articles => {\n    // clearAtriclesContainer();\n    appendArticlesMarkup(articles);\n    loadMoreBtn.enable();\n  });\n}\n\nfunction appendArticlesMarkup(articles) {\n  refs.list.insertAdjacentHTML('beforeend', createMarkup(articles));\n}\n\nfunction createMarkup(articles) {\n  return articles\n    .map(({ url, urlToImage, title, author, description }) => {\n      return `<div class=\"element\">\n        <a href=\"${url}\">\n            <img src=\"${urlToImage}\" alt=\"\"/>\n            <h2>${title}</h2>\n            <p>Posted by: ${author}</p>\n            <p>${description}</p>\n        </a>\n      </div>`;\n    })\n    .join('');\n}\n\nfunction clearAtriclesContainer() {\n  refs.list.innerHTML = '';\n}\n","export default class loadMoreBtn {\n  constructor({ selector, hidden = false }) {\n    this.refs = this.getRefs(selector);\n\n    //  це аналог if\n    hidden && this.hide();\n  }\n\n  getRefs(selector) {\n    const refs = {};\n    refs.button = document.querySelector(selector);\n    refs.label = refs.button.querySelector('.label');\n    refs.spinner = refs.button.querySelector('.spinner');\n    return refs;\n  }\n\n  enable() {\n    this.refs.button.disabled = false;\n    this.refs.label.textContent = 'Show more';\n    this.refs.spinner.classList.add('is-hidden');\n  }\n\n  disable() {\n    this.refs.button.disabled = true;\n    this.refs.label.textContent = '...loading';\n    this.refs.spinner.classList.remove('is-hidden');\n  }\n\n  show() {\n    this.refs.button.classList.remove('is-hidden');\n  }\n\n  hide() {\n    this.refs.button.classList.add('is-hidden');\n  }\n}\n","// створюємо клас, який буде відповідати за фетч даних з бекенду\n// це робиться для того, щоби розділити фкнкціонал, який робить різні речі\n\nexport default class NewsApiservice {\n  // в конструкторі вказуємо властивості, які буде мати екземпляр цього класу і куди будемо записувати дані замість використання глобальних змінних\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  fetchArticles() {\n    //   об'єкт параметрів пошуку, який парситься в ЮРЛ, щоби не писати довжелехний лінк\n    const searchParams = new URLSearchParams({\n      q: this.searchQuery,\n      pageSize: 5,\n      page: this.page,\n    });\n\n    //   власне, ЮРЛ\n    const url = `https://newsapi.org/v2/everything?${searchParams}`;\n\n    //   в цому об'єкті перераємо зберігаємо заголовки (наприклад, ключ доступу до АПІ)\n    const options = {\n      headers: {\n        'X-Api-Key': 'b41603e50de9421aa47b2028dddacda6',\n      },\n    };\n\n    // ми хочемо, щоби фетч повернув проміс із статтею, який ми далі опрацюємо у зовнішньому коді\n    return fetch(url, options)\n      .then(r => r.json())\n      .then(i => {\n        //   після отримання ОК результату фетчу, збільшуємо значення сторінки на 1, для того, щоб наступний запит йшов на сторінку 2\n        this.incrementPage();\n\n        return i.articles;\n      });\n  }\n  // метод (функція збільшення значення сторінки)\n  incrementPage() {\n    this.page += 1;\n  }\n  //   метод (функція) збивання значення сторінки на 1 (викликається при натисканні кнопки пошуку, а для кнопки лоуд мор цього сценарію не буде, тому сторінка збільшиться на 1)\n  resetPage() {\n    this.page = 1;\n  }\n\n  // геттери і сеттери\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n"],"names":["$8f6a480bb40b134f$var$refs","list","document","querySelector","form","$8f6a480bb40b134f$var$loadMoreBtn","constructor","selector","hidden","this","refs","getRefs","hide","button","label","spinner","enable","disabled","textContent","classList","add","disable","remove","show","$8f6a480bb40b134f$var$newsApiService","searchQuery","page","fetchArticles","searchParams","URLSearchParams","q","pageSize","fetch","headers","then","r","json","i","incrementPage","articles","resetPage","query","newQuery","$8f6a480bb40b134f$var$appendArticlesMarkup","insertAdjacentHTML","map","url","urlToImage","title","author","description","join","$8f6a480bb40b134f$var$createMarkup","addEventListener","e","preventDefault","target","value","alert","innerHTML"],"version":3,"file":"index.2943f625.js.map"}